// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// QueryBundleResponse query bundle response
//
// swagger:model QueryBundleResponse
type QueryBundleResponse struct {

	// The name of the bucket where the file has been uploaded
	BucketName string `json:"bucketName,omitempty"`

	// The name of the bundle where the file has been uploaded
	BundleName string `json:"bundleName,omitempty"`

	// The creation timestamp of the bundle
	CreatedTimestamp int64 `json:"createdTimestamp,omitempty"`

	// The error message of the object
	ErrorMessage string `json:"errorMessage,omitempty"`

	// The number of files in the bundle
	Files int64 `json:"files,omitempty"`

	// The size of the bundle
	Size int64 `json:"size,omitempty"`

	// The status of the object
	Status int64 `json:"status,omitempty"`
}

// Validate validates this query bundle response
func (m *QueryBundleResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this query bundle response based on context it is used
func (m *QueryBundleResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *QueryBundleResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *QueryBundleResponse) UnmarshalBinary(b []byte) error {
	var res QueryBundleResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
