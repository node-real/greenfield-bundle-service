// Code generated by go-swagger; DO NOT EDIT.

package bundle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/node-real/greenfield-bundle-service/models"
)

// BundleObjectOKCode is the HTTP code returned for type BundleObjectOK
const BundleObjectOKCode int = 200

/*
BundleObjectOK Successfully retrieved file

swagger:response bundleObjectOK
*/
type BundleObjectOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewBundleObjectOK creates BundleObjectOK with default headers values
func NewBundleObjectOK() *BundleObjectOK {

	return &BundleObjectOK{}
}

// WithPayload adds the payload to the bundle object o k response
func (o *BundleObjectOK) WithPayload(payload io.ReadCloser) *BundleObjectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bundle object o k response
func (o *BundleObjectOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BundleObjectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// BundleObjectNotFoundCode is the HTTP code returned for type BundleObjectNotFound
const BundleObjectNotFoundCode int = 404

/*
BundleObjectNotFound Bundle or object not found

swagger:response bundleObjectNotFound
*/
type BundleObjectNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBundleObjectNotFound creates BundleObjectNotFound with default headers values
func NewBundleObjectNotFound() *BundleObjectNotFound {

	return &BundleObjectNotFound{}
}

// WithPayload adds the payload to the bundle object not found response
func (o *BundleObjectNotFound) WithPayload(payload *models.Error) *BundleObjectNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bundle object not found response
func (o *BundleObjectNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BundleObjectNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BundleObjectInternalServerErrorCode is the HTTP code returned for type BundleObjectInternalServerError
const BundleObjectInternalServerErrorCode int = 500

/*
BundleObjectInternalServerError Internal server error

swagger:response bundleObjectInternalServerError
*/
type BundleObjectInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBundleObjectInternalServerError creates BundleObjectInternalServerError with default headers values
func NewBundleObjectInternalServerError() *BundleObjectInternalServerError {

	return &BundleObjectInternalServerError{}
}

// WithPayload adds the payload to the bundle object internal server error response
func (o *BundleObjectInternalServerError) WithPayload(payload *models.Error) *BundleObjectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bundle object internal server error response
func (o *BundleObjectInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BundleObjectInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
