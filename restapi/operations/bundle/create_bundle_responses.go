// Code generated by go-swagger; DO NOT EDIT.

package bundle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/node-real/greenfield-bundle-service/models"
)

// CreateBundleOKCode is the HTTP code returned for type CreateBundleOK
const CreateBundleOKCode int = 200

/*
CreateBundleOK Successfully managed bundle

swagger:response createBundleOK
*/
type CreateBundleOK struct {
}

// NewCreateBundleOK creates CreateBundleOK with default headers values
func NewCreateBundleOK() *CreateBundleOK {

	return &CreateBundleOK{}
}

// WriteResponse to the client
func (o *CreateBundleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// CreateBundleBadRequestCode is the HTTP code returned for type CreateBundleBadRequest
const CreateBundleBadRequestCode int = 400

/*
CreateBundleBadRequest Invalid request or parameters

swagger:response createBundleBadRequest
*/
type CreateBundleBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateBundleBadRequest creates CreateBundleBadRequest with default headers values
func NewCreateBundleBadRequest() *CreateBundleBadRequest {

	return &CreateBundleBadRequest{}
}

// WithPayload adds the payload to the create bundle bad request response
func (o *CreateBundleBadRequest) WithPayload(payload *models.Error) *CreateBundleBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create bundle bad request response
func (o *CreateBundleBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateBundleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateBundleInternalServerErrorCode is the HTTP code returned for type CreateBundleInternalServerError
const CreateBundleInternalServerErrorCode int = 500

/*
CreateBundleInternalServerError Internal server error

swagger:response createBundleInternalServerError
*/
type CreateBundleInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateBundleInternalServerError creates CreateBundleInternalServerError with default headers values
func NewCreateBundleInternalServerError() *CreateBundleInternalServerError {

	return &CreateBundleInternalServerError{}
}

// WithPayload adds the payload to the create bundle internal server error response
func (o *CreateBundleInternalServerError) WithPayload(payload *models.Error) *CreateBundleInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create bundle internal server error response
func (o *CreateBundleInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateBundleInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
