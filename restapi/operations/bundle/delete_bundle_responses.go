// Code generated by go-swagger; DO NOT EDIT.

package bundle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/node-real/greenfield-bundle-service/models"
)

// DeleteBundleOKCode is the HTTP code returned for type DeleteBundleOK
const DeleteBundleOKCode int = 200

/*
DeleteBundleOK Successfully deleted bundle

swagger:response deleteBundleOK
*/
type DeleteBundleOK struct {
}

// NewDeleteBundleOK creates DeleteBundleOK with default headers values
func NewDeleteBundleOK() *DeleteBundleOK {

	return &DeleteBundleOK{}
}

// WriteResponse to the client
func (o *DeleteBundleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// DeleteBundleBadRequestCode is the HTTP code returned for type DeleteBundleBadRequest
const DeleteBundleBadRequestCode int = 400

/*
DeleteBundleBadRequest Invalid request or parameters

swagger:response deleteBundleBadRequest
*/
type DeleteBundleBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteBundleBadRequest creates DeleteBundleBadRequest with default headers values
func NewDeleteBundleBadRequest() *DeleteBundleBadRequest {

	return &DeleteBundleBadRequest{}
}

// WithPayload adds the payload to the delete bundle bad request response
func (o *DeleteBundleBadRequest) WithPayload(payload *models.Error) *DeleteBundleBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete bundle bad request response
func (o *DeleteBundleBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteBundleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteBundleInternalServerErrorCode is the HTTP code returned for type DeleteBundleInternalServerError
const DeleteBundleInternalServerErrorCode int = 500

/*
DeleteBundleInternalServerError Internal server error

swagger:response deleteBundleInternalServerError
*/
type DeleteBundleInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteBundleInternalServerError creates DeleteBundleInternalServerError with default headers values
func NewDeleteBundleInternalServerError() *DeleteBundleInternalServerError {

	return &DeleteBundleInternalServerError{}
}

// WithPayload adds the payload to the delete bundle internal server error response
func (o *DeleteBundleInternalServerError) WithPayload(payload *models.Error) *DeleteBundleInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete bundle internal server error response
func (o *DeleteBundleInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteBundleInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
