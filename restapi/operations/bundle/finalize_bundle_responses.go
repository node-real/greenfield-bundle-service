// Code generated by go-swagger; DO NOT EDIT.

package bundle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/node-real/greenfield-bundle-service/models"
)

// FinalizeBundleOKCode is the HTTP code returned for type FinalizeBundleOK
const FinalizeBundleOKCode int = 200

/*
FinalizeBundleOK Successfully managed bundle

swagger:response finalizeBundleOK
*/
type FinalizeBundleOK struct {
}

// NewFinalizeBundleOK creates FinalizeBundleOK with default headers values
func NewFinalizeBundleOK() *FinalizeBundleOK {

	return &FinalizeBundleOK{}
}

// WriteResponse to the client
func (o *FinalizeBundleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// FinalizeBundleBadRequestCode is the HTTP code returned for type FinalizeBundleBadRequest
const FinalizeBundleBadRequestCode int = 400

/*
FinalizeBundleBadRequest Invalid request or parameters

swagger:response finalizeBundleBadRequest
*/
type FinalizeBundleBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewFinalizeBundleBadRequest creates FinalizeBundleBadRequest with default headers values
func NewFinalizeBundleBadRequest() *FinalizeBundleBadRequest {

	return &FinalizeBundleBadRequest{}
}

// WithPayload adds the payload to the finalize bundle bad request response
func (o *FinalizeBundleBadRequest) WithPayload(payload *models.Error) *FinalizeBundleBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the finalize bundle bad request response
func (o *FinalizeBundleBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FinalizeBundleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FinalizeBundleInternalServerErrorCode is the HTTP code returned for type FinalizeBundleInternalServerError
const FinalizeBundleInternalServerErrorCode int = 500

/*
FinalizeBundleInternalServerError Internal server error

swagger:response finalizeBundleInternalServerError
*/
type FinalizeBundleInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewFinalizeBundleInternalServerError creates FinalizeBundleInternalServerError with default headers values
func NewFinalizeBundleInternalServerError() *FinalizeBundleInternalServerError {

	return &FinalizeBundleInternalServerError{}
}

// WithPayload adds the payload to the finalize bundle internal server error response
func (o *FinalizeBundleInternalServerError) WithPayload(payload *models.Error) *FinalizeBundleInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the finalize bundle internal server error response
func (o *FinalizeBundleInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FinalizeBundleInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
