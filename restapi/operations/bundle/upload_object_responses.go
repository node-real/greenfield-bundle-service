// Code generated by go-swagger; DO NOT EDIT.

package bundle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/node-real/greenfield-bundle-service/models"
)

// UploadObjectOKCode is the HTTP code returned for type UploadObjectOK
const UploadObjectOKCode int = 200

/*
UploadObjectOK Successfully uploaded file

swagger:response uploadObjectOK
*/
type UploadObjectOK struct {

	/*
	  In: Body
	*/
	Payload *UploadObjectOKBody `json:"body,omitempty"`
}

// NewUploadObjectOK creates UploadObjectOK with default headers values
func NewUploadObjectOK() *UploadObjectOK {

	return &UploadObjectOK{}
}

// WithPayload adds the payload to the upload object o k response
func (o *UploadObjectOK) WithPayload(payload *UploadObjectOKBody) *UploadObjectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload object o k response
func (o *UploadObjectOK) SetPayload(payload *UploadObjectOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadObjectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UploadObjectBadRequestCode is the HTTP code returned for type UploadObjectBadRequest
const UploadObjectBadRequestCode int = 400

/*
UploadObjectBadRequest Invalid request or file format

swagger:response uploadObjectBadRequest
*/
type UploadObjectBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUploadObjectBadRequest creates UploadObjectBadRequest with default headers values
func NewUploadObjectBadRequest() *UploadObjectBadRequest {

	return &UploadObjectBadRequest{}
}

// WithPayload adds the payload to the upload object bad request response
func (o *UploadObjectBadRequest) WithPayload(payload *models.Error) *UploadObjectBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload object bad request response
func (o *UploadObjectBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadObjectBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UploadObjectInternalServerErrorCode is the HTTP code returned for type UploadObjectInternalServerError
const UploadObjectInternalServerErrorCode int = 500

/*
UploadObjectInternalServerError Internal server error

swagger:response uploadObjectInternalServerError
*/
type UploadObjectInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUploadObjectInternalServerError creates UploadObjectInternalServerError with default headers values
func NewUploadObjectInternalServerError() *UploadObjectInternalServerError {

	return &UploadObjectInternalServerError{}
}

// WithPayload adds the payload to the upload object internal server error response
func (o *UploadObjectInternalServerError) WithPayload(payload *models.Error) *UploadObjectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload object internal server error response
func (o *UploadObjectInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadObjectInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
