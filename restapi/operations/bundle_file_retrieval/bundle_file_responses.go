// Code generated by go-swagger; DO NOT EDIT.

package bundle_file_retrieval

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/node-real/greenfield-bundle-service/models"
)

// BundleFileOKCode is the HTTP code returned for type BundleFileOK
const BundleFileOKCode int = 200

/*
BundleFileOK Successfully retrieved file

swagger:response bundleFileOK
*/
type BundleFileOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewBundleFileOK creates BundleFileOK with default headers values
func NewBundleFileOK() *BundleFileOK {

	return &BundleFileOK{}
}

// WithPayload adds the payload to the bundle file o k response
func (o *BundleFileOK) WithPayload(payload io.ReadCloser) *BundleFileOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bundle file o k response
func (o *BundleFileOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BundleFileOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// BundleFileNotFoundCode is the HTTP code returned for type BundleFileNotFound
const BundleFileNotFoundCode int = 404

/*
BundleFileNotFound Bundle or object not found

swagger:response bundleFileNotFound
*/
type BundleFileNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBundleFileNotFound creates BundleFileNotFound with default headers values
func NewBundleFileNotFound() *BundleFileNotFound {

	return &BundleFileNotFound{}
}

// WithPayload adds the payload to the bundle file not found response
func (o *BundleFileNotFound) WithPayload(payload *models.Error) *BundleFileNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bundle file not found response
func (o *BundleFileNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BundleFileNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BundleFileInternalServerErrorCode is the HTTP code returned for type BundleFileInternalServerError
const BundleFileInternalServerErrorCode int = 500

/*
BundleFileInternalServerError Internal server error

swagger:response bundleFileInternalServerError
*/
type BundleFileInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBundleFileInternalServerError creates BundleFileInternalServerError with default headers values
func NewBundleFileInternalServerError() *BundleFileInternalServerError {

	return &BundleFileInternalServerError{}
}

// WithPayload adds the payload to the bundle file internal server error response
func (o *BundleFileInternalServerError) WithPayload(payload *models.Error) *BundleFileInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bundle file internal server error response
func (o *BundleFileInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BundleFileInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
