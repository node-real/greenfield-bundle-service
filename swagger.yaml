swagger: '2.0'
info:
  version: 1.0.0
  title: Bundle Service API
  description: API for handling file bundling and querying objects in the Bundle Service.
host: 'bundle-service.nodereal.io'
basePath: /v1
schemes:
  - http

paths:
  /uploadObject:
    post:
      tags:
        - Bundle
      summary: Upload a single object to a bundle
      description: >
        Allows users to upload a single file along with a signature for validation, and a timestamp.
      operationId: uploadObject
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Signature
          in: header
          description: User's digital signature for authentication
          required: true
          type: string
        - name: file
          in: formData
          description: The file to be uploaded
          required: true
          type: file
        - name: fileName
          in: formData
          description: The name of the file to be uploaded
          required: true
          type: string
        - name: bucketName
          in: formData
          required: true
          type: string
          description: The bucketName of the bundle
        - name: bundleName
          in: formData
          required: false
          type: string
          description: The name of the bundle
        - name: timestamp
          in: formData
          description: Timestamp of the upload
          required: true
          type: integer
          format: int64
        - name: contentType
          in: formData
          description: Content type of the file
          required: true
          type: string
      responses:
        '200':
          description: Successfully uploaded file
          schema:
            type: object
            properties:
              bundleName:
                type: string
                description: The name of the bundle where the file has been uploaded
        '400':
          description: Invalid request or file format
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'

  /view/{bucketName}/{bundleName}/{objectName}:
    get:
      tags:
        - Bundle
      summary: Retrieve an object as a file from a bundle
      description: >
        Fetches a specific object from a given bundle and returns it as a file.
      operationId: bundleObject
      produces:
        - application/octet-stream
      parameters:
        - name: X-Signature
          in: header
          description: User's digital signature for authentication
          required: true
          type: string
        - name: bucketName
          in: path
          required: true
          type: string
          description: The bucketName of the bundle
        - name: bundleName
          in: path
          required: true
          type: string
          description: The name of the bundle
        - name: objectName
          in: path
          required: true
          type: string
          description: The name of the object within the bundle
      responses:
        '200':
          description: Successfully retrieved file
          schema:
            type: file
        '404':
          description: Bundle or object not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'

  /createBundle:
    post:
      tags:
        - Bundle
      summary: Start a New Bundle
      description: >
        Initiates a new bundle, requiring details like bucket name and bundle name.
      operationId: createBundle
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: X-Signature
          in: header
          description: User's digital signature for authorization
          required: true
          type: string
        - in: body
          name: body
          description: Parameters for managing a bundle
          required: true
          schema:
            type: object
            required:
              - bucketName
              - bundleName
              - timestamp
            properties:
              bucketName:
                type: string
                description: The name of the bucket
              bundleName:
                type: string
                description: The name of the bundle to be managed
              timestamp:
                type: integer
                description: Timestamp of the request
                format: int64
      responses:
        '200':
          description: Successfully managed bundle
        '400':
          description: Invalid request or parameters
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'

  /finalizeBundle:
    post:
      tags:
        - Bundle
      summary: Finalize an Existing Bundle
      description: >
        Completes the lifecycle of an existing bundle, requiring the bundle name for authorization.
      operationId: finalizeBundle
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: X-Signature
          in: header
          description: User's digital signature for authorization
          required: true
          type: string
        - in: body
          name: body
          description: Parameters for managing a bundle
          required: true
          schema:
            type: object
            required:
              - bucketName
              - bundleName
              - timestamp
            properties:
              bucketName:
                type: string
                description: The name of the bucket
              bundleName:
                type: string
                description: The name of the bundle to be finalized
              timestamp:
                type: integer
                description: Timestamp of the request
                format: int64
      responses:
        '200':
          description: Successfully managed bundle
        '400':
          description: Invalid request or parameters
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'

  /bundlerAccount/{userAddress}:
    post:
      tags:
        - Bundle
      summary: Get Bundler Account for a User
      description: >
        Returns the bundler account for a given user.
      operationId: bundlerAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userAddress
          in: path
          required: true
          type: string
          description: The address of the user
      responses:
        '200':
          description: Successfully retrieved bundler account
          schema:
            $ref: '#/definitions/BundlerAccount'
        '400':
          description: Invalid request or parameters
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'

  /setBundleRule:
    post:
      tags:
        - Rule
      summary: Set New Bundling Rules
      description: >
        Set new rules or replace old rules for bundling, including constraints like maximum size and number of files.
      operationId: setBundleRule
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: X-Signature
          in: header
          description: User's digital signature for authorization
          required: true
          type: string
        - in: body
          name: body
          description: Bundle rule creation parameters
          required: true
          schema:
            type: object
            required:
              - bucketName
              - maxBundleSize
              - maxBundleFiles
              - maxFinalizeTime
              - timestamp
            properties:
              bucketName:
                type: string
                description: Name of the bucket for which the rule applies
              maxBundleSize:
                type: integer
                description: Maximum size of a bundle in bytes
                format: int64
              maxBundleFiles:
                type: integer
                description: Maximum number of files in a bundle
                format: int64
              maxFinalizeTime:
                type: integer
                description: Maximum time in seconds before a bundle must be finalized
                format: int64
              timestamp:
                type: integer
                description: Timestamp of the request
                format: int64
      responses:
        '200':
          description: Successfully added bundle rule
        '400':
          description: Invalid request or parameters
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'

definitions:
  BundlerAccount:
    type: object
    properties:
      address:
        type: string
        description: The address of the bundler

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int64
        description: "HTTP error code"
        example: "400/500"
      message:
        type: string
        description: "Error message"
        example: "Bad request/Internal server error"
